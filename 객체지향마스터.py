#파이썬 객체지향 프로그래밍

class 자동차: #슈퍼 클래스
      이름 = ""
      색깔 = ""
      속력 = 0
      마력 = 100
      가격 = 0
      횟수 = 0

      #파라미터 (이름, 색깔, 속력, 마력)
      def __init__(self, 이름, 색깔 = "", 속력 = 0, 마력 = 100):
            자동차.횟수 += 1
            자신 = self
            자신.가격 = 1000
            출력("새 인스턴스 만들어짐!")
            자신.이름 = 이름
            자신.색깔 = 색깔
            자신.마력 = 마력
            자신.속력 = 속력

            출력("새 인스턴스의 이름 : %s" %이름)

      def 속력증가(self, 속력):
            자신 = self
            자신.속력 += 속력

      def 속력감소(self, 속력):
            자신 = self
            자신.속력 -= 속력

      def 마력증가(self, 마력):
            자신 = self
            자신.마력 += 마력

      def 마력감소(self, 마력):
            자신 = self
            자신.마력 -= 마력

      def 마력출력(self):
            자신 = self
            출력("마력 %d" %자신.마력)    

      def 속력출력(self):
            자신 = self
            출력("속력 %d" %자신.속력)

      def 속성출력(self):
            자신 = self
            출력("%d 번째 차량" %자동차.횟수) #클래스 변수
            출력("속력: %d" %자신.속력)
            출력("마력: %d" %자신.마력)
            출력("이름: %s" %자신.이름)
            출력("색깔: %s" %자신.색깔)
            출력("가격: %s" %자신.가격)
            
class 아우디(자동차): #클래스 상속 1
      def 속력증가(self, 속력): #클래스 오버라이딩
            자신 = self
            자신.속력 = 자신.속력 + 속력 * 2
      def 부스터(self):
            자신 = self
            자신.속력 = 자신.속력 * 2
            
class 트럭(자동차): #클래스 상속 2

      def __init__(self, 이름, 색깔 = "", 속력 = 0, 마력 = 100):
            자동차.횟수 += 1
            자신 = self
            자신.가격 = 1000
            출력("새 인스턴스 만들어짐!")
            자신.이름 = 이름
            자신.색깔 = 색깔
            자신.마력 = 마력

            if 속력 >= 80:
                  자신.속력= 80
            else:
                  자신.속력 += 속력

            출력("새 인스턴스의 이름 : %s" %이름)
      
      def 속력증가(self, 속력):
            자신 = self
            if 속력 >= 80:
                  자신.속력= 80
            else:
                  자신.속력 += 속력

class 대형트럭(트럭): #서브 클래스의 서브클래스
      
      적재량 = 0
      
      def __init__(self, 이름, 색깔 = "", 속력 = 0, 적재량 = 0, 마력 = 100):
            자동차.횟수 += 1
            자신 = self
            자신.가격 = 1000
            출력("새 인스턴스 만들어짐!")
            자신.이름 = 이름
            자신.색깔 = 색깔
            자신.적재량
            자신.마력 = 마력

            if 속력 >= 80:
                  자신.속력= 80
            else:
                  자신.속력 += 속력
            출력("새 인스턴스의 이름 : %s" %이름)
            
      def 적재하기(self, 적재량):
            자신 = self
            if 적재량 <= 80:
                  출력("적재량이 너무 높습니다!!")
            else:
                  자신.적재량 += 적재량

      def 속성출력(self):
             자신 = self
             출력("%d 번째 차량" %자동차.횟수) #클래스 변수
             출력("속력: %d" %자신.속력)
             출력("마력: %d" %자신.마력)
             출력("이름: %s" %자신.이름)
             출력("색깔: %s" %자신.색깔)
             출력("가격: %s" %자신.가격)
             출력("적재량: %s" %자신.적재량)
             
            
def 두번띄어쓰기():
      출력("\n\n")

def 출력(내용):
      print(내용)


#인수 (이름, 색깔, 속력, 마력)
자동차차 = 자동차("멋진 자동차 1") #인스턴스 생성
자동차차.속력증가(10) #클래스 메소드 호출
자동차차.속력출력()
자동차차.속력증가(100)
자동차차.속력출력()
자동차차.속력감소(10)
자동차차.속력출력()
자동차차.속성출력()
두번띄어쓰기() #함수 호출

자동차2 = 자동차("빠른 자동차 1" ,"보라색", 200)
자동차2.속력출력()
자동차2.속력증가(200)
자동차2.속력출력()
자동차2.속성출력()
두번띄어쓰기()

자동차1 = 자동차("개멋진 자동차 2", "빨간색", 150)
자동차1.속력출력()
자동차1.속성출력()
두번띄어쓰기()

자동차10 = 자동차("자동차 10", "초록색", 150, 500)
출력(자동차10.색깔) #인스턴스 변수 출력.
자동차10.속성출력()
두번띄어쓰기()

에이팔 = 아우디("에이팔", "하얀색", 200)
에이팔.속성출력()
두번띄어쓰기()
에이팔.부스터()
에이팔.속성출력()
두번띄어쓰기()

봉고트럭 = 트럭 ("봉고트럭", "검은색", 200) #트럭은 메서드 오버라이딩을 통해 속도를 80으로 제한시킴.
봉고트럭.속성출력()
두번띄어쓰기()

다마스 = 트럭 ("다마스", "하얀색", 10)
다마스.속력증가(1000)
다마스.속성출력()
두번띄어쓰기()

볼보 = 대형트럭("볼보", "검은색", 200) #서브클래스의 서브 클래스
볼보.적재하기(100)
볼보.적재하기(79)
볼보.속성출력()
